{"cells":[{"cell_type":"code","execution_count":27,"metadata":{"id":"gxdES2WcOJCz","colab":{"base_uri":"https://localhost:8080/","height":496},"executionInfo":{"status":"ok","timestamp":1680011485811,"user_tz":-330,"elapsed":3770,"user":{"displayName":"Alok Raj","userId":"11236244298665653253"}},"outputId":"5072370e-8ce7-4b2d-aad3-7ac8ead8f15a"},"outputs":[{"output_type":"stream","name":"stdout","text":["                     0     1     2     3     4     5     6     7     8     9\n","labels               0     1     2     3     4     5     6     7     8     9\n","Number of labels  3000  3000  3000  3000  3000  3000  3000  3000  3000  3000\n"]},{"output_type":"display_data","data":{"text/plain":["<PIL.Image.Image image mode=RGB size=28x28 at 0x7F8E167D3CA0>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAIAAAD9b0jDAAACzElEQVR4nO2TPUssSRSGT310d9ldtI5BD20LKgZqooKxP0AwMjEQNHMEQwNDFX+Fv0KMNBB/gNlEM6AM6IA4ijDQ2h/T9bHBWeZ697rLXdhsfYPidHXX0+95qwrgW9/6T0V+87vV1dWZmZkkScqyLMtSaw0AQRB0u92Li4uyLP8ddH9//+joqN/v93q9t7e3Xq+XpqkxZnx8fH5+fmFhwRhzeXm5vb39u9Czs7PNzc2Hh4c0Ta21lFIcPc8DgDzPXdcFgFqtZoyZm5vDVfQfiLu7uzs7O51OBwCEEL7vM8Y4567raq0ppVJK13Udx0nTtCzL4+Pjv3VKCLHWAkCr1ZJSZlmWpiljrKoqpRRjbGRkhDGGlgHAGEMpZYzd398fHBy02+0vnGJHGxsbk5OTeZ4DgO/7SinHcaSUvu8TQgghCMJ/UEpd142iqNFoAAD/FWqMAYCtrS2lFCGEMYZcrLEPa+0QXVUV5zwIgtfX18XFxenp6S+gVVUBwNLSUlVVjDFjjNaac47EYUSfCwyHcx7HcRzHX0BXVlbW19eFEGgHAJBIKR2GiPPo2nVd9C6EAADHcfhwW1CNRuPk5CQMw6Io8jwfLsPerbXGGHy0PwtDL4pCSsk/E6+vr5Mkubu7m5iYkFJqrYuiqNVqQRAURYE2rbWMMaXUEIexGmMcx3l/f+ec/3B6dXUlpex0OvV6HQ+glFII8fj4KKWcmpoaDAaDwYAQopTC3lFaa8/zsIkoiqIo+tPp6elpHMdPT09VVY2NjZVlmWVZlmWYYLfbfX5+FkJwznH30DKC8BYYYzzPC8NwdnYWAODw8PDl5aXZbN7c3LRarb8khQVGYX+RMSbP84+PjyzL+v2+tfb29paHYbi2tlYUhRAiSZK9vb1ms7m8vBzHcb1edxwHAIIgaLfb5+fn6JFS+vlIaa2VUlprY8zo6Ojw1bf+n/oDuJexYQPZ2/gAAAAASUVORK5CYII=\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<PIL.Image.Image image mode=RGB size=28x28 at 0x7F8E167D3A00>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAIAAAD9b0jDAAAENElEQVR4nJWWuU47SRDGu3t6pudgjMGAAGFsQJhDCJ6ABEJiRIREgoTEO8CLGD8CAQGCBAkJkZIYEzgAZCEwl/HIHubo4x/UruVlbbPbmWe6f/VV1dc1xqjnwhgrpdbX1/f29i4vL4MgmJqayufz9/f3vQ/+vs7Ozjjn1Wr15eVFCHF4ePiLlF+JBwcHOzs7nHPOeRzHuq5blnV6erq/v/+/oYQQKSVjrNlsFotFIUSj0Wg0GiMjI4yxRCKRzWa7nu32QkqJECoUCvV6/fX11TRNxpjjOIyxer0+Pj5+dXW1sLDwn6AY/6V9e3tbCLG2tvb5+Tk7O5tKpRBCvu8zxtLp9OPj4/T0dKlUKhaLe3t7v6QP7d7a2jo6Onp4eBBCaJpGCHFd9+3trVarpdPpOI6VUnEcY4wdxxkcHNzd3T0+Pu4MBSJCqFwum6ZZrVYty0IIBUHQ19f39vbWbDYnJiY45xhjjDG0bmho6O7ubmNjo8Wh/4YyxgghYRhijIUQjDHTNBFCuq5HUaRpmud5kEEymQRuLpdr5/wDCjKXl5cdx/E8z/d9IYRhGEIIjHEURZTSer3ebDY554ZhwBOlVDKZ7AoFpaurqxDA8zyMcRAESinOuW3bSqmPjw9N06SUcRzX6/VkMhmGoeu6tm37vt+h+6B0ZWUFISSlNE2Tti14q+s6xljTNE3TDMNwXTcMQ4TQ4uJii9MBms1mOedKKUopOIxzTgiB5rT3kxDCGBNCxHHc7tkO5p+ZmQHTaJoGojDGhBCICkSgE0KUUlLK7+/vTCbTCzo2NsY5D4KAMUYphZP47wV7wLwIIahMs9mcm5vrBX14eOCcR1GEEDIMo5UyxhjuLuSulIJ4UIHh4eGu0GQySSnlnGuaBhUghGiaBopadYAYlNIoikCBYRhdoblcDnBwhlIKtQNWKwbIxBgzxpRSfX195XK5K3R+ft4wDCklgCilQohW1tAWsC1CyLIsKWUYhv39/dfX112h6XSaEAJXyLKsOI4557quSynhIQiHPBzHiaIIHH1xcdEVOjk5KaVsNBpCiFqtBjgwPBQU0gftcHcTiUSlUqlUKl2hMzMznPNEIvH8/Ox5nuu6rTqCwNZP0zSFELD55OSkHfIT2t/fL4TQdf3r6yuVSvm+b5omgFpQjLFt267rwk3LZDL5fL4XFCZ8GIbT09NDQ0Mw66A5wJVSYowHBgaUUkEQGIZRq9VKpVIv6MfHB9heKQWVhZHMGEMIQQBd1xljsM2yrEKhgNq+Q+jH6EMIjY2NJRIJQoht29B9mBdxHH9/fwshKKWWZfm+H0WRruujo6OXl5eobcp0gJ6fn399fYVh6Hne5ubm0tJSFEVCCIRQHMdRFDmOY9s2mEEIcXNzc3Z29kPp738mMplMNpu1LGtubk4IUa1WdV1/f3+/vb19enrqeOQP059xEAdls2EAAAAASUVORK5CYII=\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<PIL.Image.Image image mode=RGB size=28x28 at 0x7F8E167D3CA0>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAIAAAD9b0jDAAAEEUlEQVR4nJ3WzUrzShgH8HnTpCHE0FSHkFZDqFUp2hakIFXcqAsXgnuvwp0X0BvwDrwGUTdFFEERayixCFJqPyi02oaYNsYhTToNZ9Gze1s5ObOc8P/xhHnmYf6AKSuXyxWLxfn5eUVRIIQsyyKEYrFYPp9fXV0FACCEbm9vJ2b/TEPv7+91XRdFsdPpSJIkimKj0YAQPj4+yrJcq9UAAMfHx4PB4O8sOVGcm5sjSdJxnNPT0/X19dfX116vFwqFFEU5OjrK5/OO42xtbfE83+l0/o4TE9FIJOI4DgBgZWVFEAQAgCiKDMPEYrHhcMhxnOd5tm2PP/1XFCGUSCQKhUIymby7u+t0Op7nKYqyvb2dz+c7nY4gCG9vb5IkTYxP/v1oNGrbdigUIggiHo+zLGvbdiKR0HU9Fov9Ww5BcBzno9JIJGJZlizLxWKRIAiMcaFQGI1Gd3d3GOOZmZmXlxeWZXVd94GOIYxxKpUyTZMkyf39/V6vt7u7y/N8MBjkOI6iKJqmfaCVSsVxHFVVRVE0DMPzPEEQKpVKKpWq1+sPDw+xWKxUKhHElJom7i4uLhIEIYqiZVkMw+zt7dE0DSG8ubk5PDzc2dkxTVOSJH+VjkYj13UxxsPhsFwun5+fx+Nx27Zpmk4kEsPhsF6vi6JYrVZ9oLVaLRwOa5r28PBwcnLy9PSUSqUymYzneaqqYoxlWXZd11+f9vv9ZrOZSCTK5bKqqgRB3Nzc6Lq+ublJ07Su64FAoFwuT8xORSVJarVaoVAom81qmra2tpbL5WZnZ7PZ7PPzs6qqgiBEo9Fms+kDrVQqhmEwDKNpWrvdlmUZQphMJq+vr3meX1paAgBQFIUx9oF+fX1pmoYx5jjOtu1+v9/tdmmaZhhGkqR0On1xccEwDElOvpCTUQDA8vKyqqpLS0uZTObj4+P9/d2yLI7jrq6udF3f3t4eDoetVssfijEmSVLXdY7jFhYWotFovV4fXwTbtiGEHx8fCCF/aKlUmp+fBwBcXl7atj0+boRQNpslCEJRFFEUp2WnoizLAgBGo5EsywCAbreLMZYkqdvtDgYDSZJM0/SNAgAMw+j1eplMBiFkmma73aYoqlarIYTi8XipVPKNKooiCIIgCMVicXZ2VhAEiqKq1erBwcHPz49hGL9UMxVtNpvjlvr8/GQYBiHEcZzjOBRFBQIB13WnDdPf0HF7AgA2NjYajQZCyHEcnuebzSaEUJKkRqPhG+31eizLCoKgaVo6nYYQmqYJIQQAhMPhz89Py7KmZSdfifFyXTcSiQAAEEK6rrfbbcMwgsGg53m/TJPfKgUAnJ2djUajeDyOMbYsy3VdnuchhARBjB8T/wc1DGM8qoPB4HiHJEnXdb+/v385JQDAP10QJXOLlZc6AAAAAElFTkSuQmCC\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<PIL.Image.Image image mode=RGB size=28x28 at 0x7F8E167D3A00>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAIAAAD9b0jDAAAEJElEQVR4nJVVv08yTRCe3du7AwFBGxVjAYEYLe200mhigi0S/wQTGwotTPwnTLQ0NnZqQUVhNGpIaOzUGAu1QRFFQiQcsHe3+xaj68nn5/t907Dszjwz88yPI/CrMMYcxwGA5eXlsbExKeXl5eXOzg4AGIbBOf/Riv6CqOu64ziJROL09HR0dDSfz5+dnS0uLubz+VQqxTknhPwe0w8x4uH29jaTyXifAoHAxcXF/Pw8AJim+T9AKaUAsL+/v76+DgA9PT2UUkqppmkAMDk5WSwWUfMv8RJCUAMRY7FYoVDocqMkl8tls1kA0HXdawtdnEoppZQAIIQAgNXV1bu7OwDA6PBSSb1eT6fTAGDbttf2L1IsFicmJv7tdW1trVqt/pwx/mDr7O3tDQ4O1mq1ZDJZq9WGhoaenp7q9TpjzLIsIYQQAmmtVCrJZDKZTJ6fnyPdtm2Hw+HNzc3j4+NvHJ+cnMTj8WazyRhjjNXr9UgkYpqmbduu60opNU2jlBJCdF1vNpuvr68jIyOu67quyzkPh8OFQiGTyTAvqK7rmqbpuu66rqZpV1dXyWQyFAq1223VOlJKHAfDMK6vr/1+P2OMUoq4z8/PAMAAgBCCHI+PjzebTQyEcz47O8s5dxzHNE0pJaVUSon+CCGGYSwsLLRaLcdxNE3jnA8PDweDwQ9QJZFIpNFoEEJQqdFoAABiqX6ilAohpJSdTodzzhhDTjRNs207EAh8A81ms6VSybZtTdPQuZRSJQEAWCj8i12J/vBSCNHpdJAlhjT19fWtrKxgJ4pPQUSEdhwH4RSoN0UEdV33Y3bwdnt7G9lByh3HQf8KSJ29cF03QggcEwoA6XR6YGAgFospbewbrz0mSz5FcYL3KMqEAcDBwYFlWblcDjPF4qrE1QHPhBBkRtHqpfhb+v39/ZZl4bpTyapI8dDFKUYHnzvBq/MBOjc35/f7O52ON0cVggrTdV3Fple8vr9aKpVKua6LDeFlU0UnhDBNU9f1druNE4V7wKv2VRJEsW374eGh1WoxxrzpY1cTQkKhEKW0Wq36/f5/1k2dkUAKAJlMJhqNEkICgQAm2JU1IcTn8x0eHm5tbdXrdZ/P5w3NW3eMnQLA0dHRy8tLuVwWQnDOu+qOlo7jBIPBaDRqGIamabhEEA7V1Lx8cFqr1UqlUjweNwyj0+l4S4R84WFpaQmXvGVZPp9PPak2wMn+KhRjDIsQDodRQ60ltHx7e8NJs20bp847V+jVsqze3t4v0I2NjcfHR845rnHDMJR/13XL5XIikdjd3fX7/YZh4BB3jX+73ZZS1mq1L9CZmZmpqambmxufz6emXtd1zC4QCFSr1enpaSGEruuGYXjhUNm27VardX9/D+obhRKPx0OhkPpsmKZpWValUnl/f282m/Cf5Q8ja7Tg+VMDRAAAAABJRU5ErkJggg==\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<PIL.Image.Image image mode=RGB size=28x28 at 0x7F8E167D3CA0>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAIAAAD9b0jDAAAD30lEQVR4nIVWzU7qQBSezk+nLdCKWiJEYrzBBH9CWPoGPoPhHdy5ML6FO7eufQJduHDjykQjRokkKsaYYKoYoNDOz12cXC6i1bObzsw33/m+cw4gNBaGYSCECCEoORhj4+cxxl/P04k1xlgphRBaW1srl8uVSmVra6vZbN7f31NKHcfxff/p6enw8PDs7Ozm5kZrjTGeADHGF4QQKaVlWcfHx0IISmm/35+enq5UKp1OJ47jfD5fr9cfHh7S6bTW+uXlZXNzEyhrrb8Hhb2Dg4NSqfT8/IwQ0lr3er2lpaVcLmcYRrvdvru7wxibpokQKhaLJycnOzs7P6UPr/m+3+l0KKWwTKVSzWbz6upKa805dxwHY0wpVUq9vb2trKx81X1S02Kx6Hlet9tFCCmllFKGYdi2nUqltNZaa1AcvjPGHMcpFAqQ1n9jJkDL5TJjjBBiWRb4JoQQQiilRqphjLXWkIplWeVyeQJkErRarQohRoWitYY6A4IjRK01Y8yyLK31+vr6L+mvrq5CAWSz2UajQQgZiQDQlFIokj9//gRBoJRaXl7+hWmhUDAMIwxDpZTrunEcgy0YY8YYpdQ0Tc65ZVmPj4+EkDiO5+bmfgHN5XJCCNu2Ly8vEUIjf4AyISQMQ9M0lVL1et22bYSQ7/s/gYJMQgjLssIwHA6Ho26BjgQRoiiybbtUKsEznHNKaSJoJpMhhEA9+r4P7BhjjDGwHrbiOBZCvL6+mqYZxzFCaGZm5idQsIIx1ul0pJQYYyAIgRAihAghoiiCZxhjQojFxcVE0Pn5eaUU53wwGDQaDc65EAI0BVCoJ/herVbBPa31hKyfQBcWFuI4Bpc/Pj4cxxkfE2hscCil3t/foSoQQlNTU+PHPgns+76UUikVRRFoOsL6z+KfGv1+nxACz6RSqUSm6XRaSul5XqvVymazYMLXANDBYEAIAdzZ2dlEppZlSSkppfl8XggB12BrXAeQFRpEKSWldBwnkSnnXEoJ5kBeoAYggggwqKDygiDAGP8CyhiDm1LKOI7jONafY7QLo6vb7cIXaK3v0zcMQynV7XYzmYzv+zDe4RoQB5rQtZ7nua47HA6hQRJBpZSjzgmCgDHW6/UAAmPsOI7rujBQ+v3+7e0tjH1CyHA4TASFsvc8b29vb39/H/0Wu7u7tVotCIIwDBM19TwPMm232+hzeX4bMHGEELlcLhH0/PwcBnCz2UQIffOD/u/fA5Ta0dGREIJzfnFxkQh6fX3tum4URa1W61umYJSUEpbtdpsQkslkTk9Pf8poY2OjUqmMeCUdGyVRq9W2t7c55+O7fwFIU0k2AL8xHQAAAABJRU5ErkJggg==\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<PIL.Image.Image image mode=RGB size=28x28 at 0x7F8E167D3A00>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAIAAAD9b0jDAAADlklEQVR4nJWVsUv7TBjHn997oQcpCTQkEGkgUGkg0EILgos4OTkVB8FBcNe54ObuP+DeQRDdBEcn3cQMglBpsZBCIcWDlBxcuIN3eDAUW6t+h+Mu7fPJ97nn7sk/+F7VavX4+HgwGMxmszRNK5VKkiSWZVWr1e3t7cvLy6urq6WB/5Y+PTg4OD09zbLMcZzX11dKqWEYQohyuZym6Wg0CoKAEMIYu7+/Pz8//xm6s7PT7XbTNE2SJAzDKIo452EYdjqd9/f3Xq8HAO12WwjBGLNtezwen5yczBP+W4QeHh4OBgPGGGOMc95sNjnnAJBl2Ww2AwCllK7rjDEp5Xg8tm376OhonqB9IdZqNQwDAErpcDgMw9D3/SiKhsMhIYRz7nmeUurj48M0TUKIUqrVaq2C7u/vA4BhGGgkTVPDMOr1uq7rk8kkTVPf933f7/f7SinGmO/7QgjHcValH4bhdDq1LMtxHM45pXQ0Gj09PUkpfd8PgoBS2u/3kySRUgKA7/uMMQBoNBrLnbZarTzP4zje3NyklE4mkyzLAIAxFsexpmlSSjwDlFJd1zc2NgghaZpmWdbpdF5eXpY4bTabWZZ5nue67tnZ2d3dned5eZ4TQsrlMo6WZVFKbdv2PK/b7TqO4ziOpmm6ri932uv1bm5ugiCI4/jx8XFvb49SimmiRyEEpVQIAQCe5z09PXU6Hcuynp+f8WAsLxTnPIqiKIoAYDQaIUgphehCxbJIeVWhCCGEkFKpBADoaFGapuFrMGUMWQVVn0Io5juPQ0qWZePxuFqtFlGroPN/opRyzoUQmKz4FP4qpVxbW1savhyKMk2zKMu8pJSmaRYV/2ITFgv1BZokCaYMAJqmEUJwRHSlUvmzU9d155dIxDnuQxiGf4YGQYC541gQAYBSqpT6cuVXQYvzgTH0U+RTeKTmoT8cKfjceNd1cUML6LxTwzBKpVIcx/V6/Q9OG42Grus4R2uFa0JInue49DzvV9AiXiklhCiyLl6J8zzPNU37UsxvoSjTNBczwA3FvkcIkVJiz//VjQIAz/MwGPOFhWrgyV9fX/+DU13XpZR5nuO9LIqepin2w9ls5rru7e3tYuySTzR+y1zXvb6+HgwG0+mUMYYdoFwuA4BhGKZphmHIOd/d3f0VtFCtVru4uLBtu+ggRYvBPdna2lq8+D9AUfV6vd1u+75v27ZlWUmS9Pv9h4eHt7e370L+BzdXAWPSApwaAAAAAElFTkSuQmCC\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<PIL.Image.Image image mode=RGB size=28x28 at 0x7F8E167D3CA0>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAIAAAD9b0jDAAADAklEQVR4nO2UT0vrTBTGJ5nJYJpoTWNeSyXStCgYAkqiIqIupSi4EnTrN3Dj0oXgB3Dlxu8guHHnwoVudOE/2qqIUbBG20ibxsTGtHkXc6/38r5yF/fCXflbHCZnJg/nmTkzAHzxxd8HQkgGc3Nz/5+lKOp3RFdXVwEAs7OzZ2dnS0tLf1AeAAghMqhUKqqqbm5ubmxs7Ozs/FwgiSMjI6enp7lcjmToX4iGYQgAuLy8zOfzKysrxWJRFMXDw0MyG0XRRxwaGjJNc3x8nGR+JQoAWFxc7O/vdxwHIaTr+snJycTEhGEYP6+ZmppaWFjgOK6tre2bxQ8vNE1TFEWqIywvL6+tre3v75fLZVmWe3t7b29vq9Xq1taWZVlvb28cx4miKAjCwcGB7/uKoszMzOzu7lJkU4gLgiiKuVzOMAye51OplOM45+fnkiSRHqhWq6qqJpNJ3/e7u7uvrq6Oj49lWU6lUoIg7O3tra+v/+iGTCajaVo2m5VlmWEYlmVrtZqiKK7rWpYlimKj0UgkEhBC0zQzmQyE8Pr62nXdwcHBrq4u3/dFUfR9f3JyEo2Ojg4PD1MU1dfXx7Ls6+tro9Go1WrpdDoej3McVygUNE17eHhACFUqFQhhOp2+u7uzLEvXdUmSPM/zfR9jDACwbRsAgObn51VV9TzPcRzHcSCEPM+zLOu6LkLo6empo6Pj5uZGkqR/vhOLxWzbxhh3dnbatm2aZrlcJnY9zwMAUDzPJxKJsbGx6elpXddZlqVpGiHE83yz2YQQuq4LIQyCwDTNo6OjQqFQKpUuLi6en58/bRhRFClJkgzDuL+/z+fzJBuPx5PJpCRJGON6vV4sFuv1+qf/QwgRQhjjMAzJMUIIIYTfDkpVVUVRstns4+NjqVQiWxaGIUIoiiKWZdvb2zmOI59BEARB8P7+HgRBFEVELhaLYYw1TXt5efnvW4AxHhgY6OnpEQSh1WoxDPMRaZqGEFIUxTAMUW+1WgAAmqZ93yd3utlsbm9vf2rriy9+n38BGG5GacViR4IAAAAASUVORK5CYII=\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<PIL.Image.Image image mode=RGB size=28x28 at 0x7F8E167D3A00>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAIAAAD9b0jDAAAEMUlEQVR4nH1VTU/yShidaTu0FKoUgkBB8yoKiVE00ahbdedOw94F/gNiTPwNLty4cedGTfQ3sDAsXSoLMTHRBcYYEQktdD56F8+9lVfhzoK0M53znDnnPANGQwbG2PM8hNDm5ma5XI7FYo7jPDw83N7enp6eIoRkWRZCwDc/9/5G6X+9vLxcXV1VVfX4+Ng0zb29vc/Pz0wmEwwGMcYYYyHEb1BlIE1CCKUUITQ3N3d0dDQ+Pn52dmYYRqvVIoSUSqVoNPrx8REMBm3b/j9Qn6YkSYBYLBZN0ywWi3d3dxcXF4SQRCLR6/UMw9jY2Li+vrZt+8f5BuvoP2cymZubm6enp+fn50ql0ul0hBD1ev3x8fHl5aVarW5tbSWTycE4/S+SJAkhFhcXT05OLMsCvoQQXddfX189zxsZGeGcM8ZUVVVVlVJ6eHh4fn4uyzLnfAAoIEqSVK1Wx8bGOp2OoigIIbAiHA5rmvb29qZpmq7rjuP0ej1VVQkhuVyOUgrb/4XyQWVZRgjt7u6m02kwBASB6HDOCSGyLHueV6vVms2mpmkwWS6XEULA4CcojPX1dSgLx6GUep7neR5jzHEczjnUhnoYY8dxVlZWEEKu6/og3/CgYDgcBhFggCxgIMYYZvL5PKWUMYYx5pz/+fPnB7OfTC3LAlBKKRSHtoHBOeecdzqdbrcL9Xq9XiQSmZ6eHgoaj8dN05QkCbRjjAEoMIU89sfOP8fS0tJQ0JmZGUKIoigYY0AEalAA9gshGGOgLGMMjjU/Pz8UNJvN9lPzSfkPIAJUhcKe52GMM5nMUNB8Ps85Bzd+Dz+G/lXium4gEOCc53K5/i//ulAmJiaEELIsBwIB4AUFQE2INzxTSimliqLIsswYg+QMZgqngKC4rgsonHMhBBTzPA80dV1XVdVerwfzoVBoKGg8HgeNXNdtt9s+TWAHv+CMoiiMsff3d0II51zTtKEdNTo6KoSglFqWlUwmobX6GwFEkCQJ7MrlctDEGONEIjEAFOKJEJJlGXzwgwmCoP+aCtKGEFJVVVEUznk6nY5GowNACSGw37fod7DgSgamsiz3SxSLxQaAhkIhwAWyEACA9ovhvgHnCAaDCCHGGDzA+FY3EAj4De7nH3DBHxCnvxHgMoMa/Zp+gxJCfAc6nY5t25qmwRJ0KqxCzsB027Z1XQcDIpHIYKMajQbcT6qqapoGhoCBhBC/QYEmY8wwDKjx9fU12Chd1/2/mkajkUqlTNNUFMXPf6vVcl232+0KITRNW1hYaDab7XZbURRJknRdHwxqWRYsb29vW5ZVq9VArFQqparqyMhIPB7PZrOTk5NTU1P7+/tra2uGYWCMI5FIPp/3of66HK+urgqFwv39/c7Ojj+5vLw8OztrmqamaRjjZrNZqVTq9TqsHhwclEol13ULhYJ/4/wDfTN6iNkmVcQAAAAASUVORK5CYII=\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<PIL.Image.Image image mode=RGB size=28x28 at 0x7F8E167D3CA0>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAIAAAD9b0jDAAAD5ElEQVR4nI2WuU77TBDAZ/awHccJkIOzQOEQDYIUlEi08B48Au9AzwsgKiRehgaJBnEUHEnAKCQ+Nt7jX4wUfV+IRLayM97f3DNB+HWEEFrr09PT3d3dx8dHIYQQIs9zrTXn3DknhIiiKIqi8/Pzfr9P3/+P8BtKp91uHx0dtdttKaWUMk3TSqVCl7++vjzPC8Pw6uqq3+8zxibNmnhHRLrJGHt+flZKcc49zxsOh3EcK6V83+ecZ1nW7/fv7+8BwFo7AZlUgoj00Gw28zxHxFKplGUZhUVKORqNPM9zzpXL5VarNdXLSSj5EkVREATW2kqlwhhTSjHGoihyzhljSIcxZmdn5792/GFpq9XyPI8xxhiL41gIwRgbDAZ5nvu+nyQJ55wxtrS0NBOUztbWFiJyzouiMMaEYWitzfNcSkmarLWMsUajAQBFUfwBNcYAwPLyMgBwzpMkAQApJee8VquFYai1DsNQKWWMWV9fBwDn3ARkMvv0RaVSsdZqrYui4JwLIYIgmJ+fB4DhcOic832f0jjV0UlLCbqwsCCEsNYKIRCxXC53Op3Ly8sgCKIoyvPcWuucq9VqM0HpNBqNoigYY4hIeX94eLi5uanX61mWRVGklKLaiqJoVqjv+8YYz/Pm5uYoXZ1O5/PzkzoSEefm5qgkKFczQZMkGcfU9/2lpaXPz08AUEpVKhXP85RSWmvf9ynQM0Epy0oppRQAPD4+3t3dAYCUEhEHgwGFmzG2vb09K1QIwTnnnKdpmmXZ5ubmaDQCgO/vb6VUuVyuVqvGmDRNNzY2plyfCuWc06DzfR8A8jwn95MkCYIgz/Ovry/nXBiGU9t/iqXjegIArbXWejAYpGlKdGstzSpjjHNucXFxJmitViMDOecAgIjf398k6vV6xhjqVPqFWm4mqBACAKy1nuchIvUuAHx8fFCuRqMRY4xCPxO0Xq+TIdZaRAyCYGzO+/t7qVSSUi4sLJTLZedcq9WSUv4NpdhTO41GIyHE2NIsyxDRWmutrVariBiGYbPZ/Bu6srLinHPO0Zozxoz3Wrfb1Vo754qiSNOUymN1dXWCMKWkqtUqOW6tpZD9/PyQ6OXlhfQhopTSOZckye8CmF5SdA0AaKCMod1ulzQhIjnx8/Pzu/2nWKq1NsYQzjknpRwOhySK45gmrHOOkhnH8f7+/t9QsoUWCc2k8RImTXmeM8ayLKPx+LtUp0Bvb2+Pj4/f399puxljLi8vSZRl2dPT0+HhIc3/IAgODg5+/5mYsg8Q8eTkpNFo7O3tra2tvb6+np2djaXLy8sXFxfdbrfX6w2Hw7e3t+vr6wnCP6ZMM4RBQqauAAAAAElFTkSuQmCC\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<PIL.Image.Image image mode=RGB size=28x28 at 0x7F8E167D3A00>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAIAAAD9b0jDAAADDElEQVR4nO2TP0sjQRjGZ2f/TGaT3Uy22MTEKsia4DZ2aYNggqJgIYKNH0ACgmhvbaESLERs/AA2FtoE0omVhZ0xEEVBi8RANtmdnezOFXuIHHccXHn4q4aXZ5553pd3APjmm/8BCOHn+fj4eGJi4heBIAi/Vv7qGIYhAGBvb49SijFOJBIHBwfPz8+SJI3H49/f+pNd9H4YhqlUamlpSZKkUqlUKpUkSdre3gYARI6fMavVaqlUiiq/N4UQcs4BALFYrFarLS4u2rb9/v4+GAxM09Q0bWdnJ1JGsrm5uWw22+l0ogoUvhDZiaIYtVypVM7Pz2dnZyVJ8n1fVVVRFB8eHgzDWFhYaLVaW1tblmUVi8VyuVypVKrVamQifE0X9QsA0DStVqsVi8Ver2eapuM4uq4TQgqFwsnJyd3d3e7u7tHRkaqqm5ubT09PnHOEEMb4+vq6Xq/Dr+OLHKemps7OzgzDYIwZhkEpzeVyqVTK87zLy8tOp3N1dVUulx8fH9fW1vr9PsY4Ho9DCIMgKBQKAADpcy62bU9PT+fzecuyGGOZTEYQhHQ6HYahpmk3Nze3t7eHh4fNZhMAkM1m7+/vm83mx8cHACAIAgAApVTX9Z/t5/P5+fl5QoiiKBDCZDLJOSeEyLIMISSEBEEgiiLnPAiC09PTVqvVbrdnZmb29/c5557nYYwZY77vAwBWVlYkCOHGxkaUSJZljHEQBPF4XBRFhJCu69FLb29vlmXV6/XV1dX19fV2u91oNFzXpZSOx+PRaMQ573a7rusKgiDYtr28vMwYU1UVYyxJkiiKiURiOBx2u11KKaWUMYYxdl03WtvX11dFUQghrut6nqcoCqUUQjgajVKp1MXFhTQYDCYnJx3HEQSBc+44ju/7vV4vUmOMdV1HCHmep6pqOp32PM8wDN/3EUJhGFJKo+WJMpqmSQgRAAAIoVwul0wmTdPMZDLRcIfDIWOMUtrv90ejEQBAlmXHcSCEjDFCSCwWi8ViiqIEQYAQQggNh8OXl5dGo/GnX/rNN//ID3OvamCDcxJfAAAAAElFTkSuQmCC\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["(5000, 784)\n","[[0. 0. 0. ... 0. 0. 0.]\n"," [0. 0. 0. ... 0. 0. 0.]\n"," [0. 0. 0. ... 0. 0. 0.]\n"," ...\n"," [0. 0. 0. ... 0. 0. 0.]\n"," [1. 0. 0. ... 0. 0. 0.]\n"," [0. 1. 0. ... 1. 0. 0.]]\n"]}],"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import cv2\n","from google.colab.patches import cv2_imshow\n","\n","df = pd.read_csv(\"/content/drive/MyDrive/Colab Notebooks/ML Bootcamp data/classification_train.csv\",index_col=0)\n","labels = df['label'].values\n","\n","classes = pd.DataFrame([np.unique(df.label.values),np.bincount(df.label.values)],index = ['labels','Number of labels'])\n","print(classes)\n","\n","# Analysis of Labelled Data\n","\n","for i in range(10):\n","    xi = df.iloc[i,1:].to_numpy()\n","    xi = xi.reshape([28,28])\n","    img = np.uint8(xi)\n","    img = cv2.cvtColor(img, cv2.COLOR_GRAY2BGR)\n","    cv2_imshow(img)\n","\n","\n","X = df.iloc[:25000,1:].to_numpy(dtype='longdouble')\n","X_test = df.iloc[25000:,1:].to_numpy()\n","print(X_test.shape)\n","row , col = X.shape\n","label_train = df.iloc[:25000,0].values\n","label_test = df.iloc[25000:,0].values\n","index = np.array([0,1,2,3,4,5,6,7,8,9])\n","y = np.zeros([10,row]) # row - wise label\n","y_test = np.zeros([10,5000])\n","\n","for i in range(row):\n","    y[label_train[i],i] = 1\n","    \n","for i in range(X_test.shape[0]):\n","    y_test[label_test[i],i] = 1\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1296,"status":"ok","timestamp":1680009044794,"user":{"displayName":"Alok Raj","userId":"11236244298665653253"},"user_tz":-330},"id":"oT4M1ksnm5Y7","outputId":"362013ae-821f-4112-bda4-cf535ca41267"},"outputs":[{"output_type":"stream","name":"stdout","text":["(5000, 784)\n"]}],"source":["#standardisation\n","\n","x = (X - np.mean(X, axis=0)) / 255  #np.std(X, axis=0)\n","x_test = (X_test - np.mean(X,axis = 0))/ 255  #np.std(X,axis=0)\n","print(x_test.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wBtjSysvNM_J"},"outputs":[],"source":["def softmax(x):\n","  softmax = np.exp(x)/np.sum(np.exp(x),axis = 0)\n","  return softmax\n","\n","def extrem(y_test_prob_dist):\n","  y_res = np.zeros(y_test_prob_dist.shape)\n","  itr = 0\n","  for i in np.argmax(y_test_prob_dist,axis = 0):\n","    y_res[i,itr] = 1\n","    itr+=1\n","\n","  return y_res\n","\n","def accuracy(x_test,m,y_test):\n","  y_pred = m @ x_test.T\n","  count = 0\n","  row, col = y_test.shape\n","  y_prob_dist = softmax(y_pred)\n","  y_res = extrem(y_prob_dist)\n","\n","  for i in range(col):\n","    if(np.argmax(y_res[:,i])==np.argmax(y_test[:,i])):\n","      count+=1\n","\n","  score = count/col\n","  return score\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"sCgibP0QbTjE","outputId":"3ef68cff-5de1-45e9-912f-b23740d007d1","executionInfo":{"status":"error","timestamp":1680010120105,"user_tz":-330,"elapsed":80459,"user":{"displayName":"Alok Raj","userId":"11236244298665653253"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["After 0 iterations :\n","loss =  0.9111169649968056473\n","Accuracy =  83.88 %\n","After 1 iterations :\n","loss =  0.90588181517338159864\n","Accuracy =  83.96000000000001 %\n","After 2 iterations :\n","loss =  0.9008769657049324037\n","Accuracy =  83.94 %\n","After 3 iterations :\n","loss =  0.896074705197753134\n","Accuracy =  83.98 %\n","After 4 iterations :\n","loss =  0.89145196182669386904\n","Accuracy =  83.98 %\n","After 5 iterations :\n","loss =  0.88698931102903097733\n","Accuracy =  83.96000000000001 %\n","After 6 iterations :\n","loss =  0.88267028870449689776\n","Accuracy =  83.96000000000001 %\n","After 7 iterations :\n","loss =  0.8784808740468911548\n","Accuracy =  83.89999999999999 %\n","After 8 iterations :\n","loss =  0.8744090795013246427\n","Accuracy =  83.91999999999999 %\n","After 9 iterations :\n","loss =  0.87044461659934648163\n","Accuracy =  83.91999999999999 %\n","After 10 iterations :\n","loss =  0.86657861996846281523\n","Accuracy =  83.86 %\n","After 11 iterations :\n","loss =  0.8628034180029056264\n","Accuracy =  83.86 %\n","After 12 iterations :\n","loss =  0.8591123418203124591\n","Accuracy =  83.89999999999999 %\n","After 13 iterations :\n","loss =  0.85549956596613896875\n","Accuracy =  83.86 %\n","After 14 iterations :\n","loss =  0.85195997556843927037\n","Accuracy =  83.88 %\n","After 15 iterations :\n","loss =  0.8484890555739617244\n","Accuracy =  83.84 %\n","After 16 iterations :\n","loss =  0.8450827984313914894\n","Accuracy =  83.8 %\n","After 17 iterations :\n","loss =  0.8417376271848723136\n","Accuracy =  83.82 %\n","After 18 iterations :\n","loss =  0.83845033143232199785\n","Accuracy =  83.78 %\n","After 19 iterations :\n","loss =  0.83521801401030238977\n","Accuracy =  83.78 %\n","After 20 iterations :\n","loss =  0.8320380466070820225\n","Accuracy =  83.76 %\n","After 21 iterations :\n","loss =  0.82890803279131074135\n","Accuracy =  83.76 %\n","After 22 iterations :\n","loss =  0.8258257771857445907\n","Accuracy =  83.78 %\n","After 23 iterations :\n","loss =  0.8227892597215308972\n","Accuracy =  83.78 %\n","After 24 iterations :\n","loss =  0.8197966140844799794\n","Accuracy =  83.8 %\n","After 25 iterations :\n","loss =  0.81684610961482154406\n","Accuracy =  83.88 %\n","After 26 iterations :\n","loss =  0.81393613604949889486\n","Accuracy =  83.86 %\n","After 27 iterations :\n","loss =  0.8110651906038294784\n","Accuracy =  83.86 %\n","After 28 iterations :\n","loss =  0.8082318669797605563\n","Accuracy =  83.89999999999999 %\n","After 29 iterations :\n","loss =  0.80543484596318470475\n","Accuracy =  83.89999999999999 %\n","After 30 iterations :\n","loss =  0.8026728873349205842\n","Accuracy =  83.88 %\n","After 31 iterations :\n","loss =  0.799944822870938024\n","Accuracy =  83.88 %\n","After 32 iterations :\n","loss =  0.79724955024897950864\n","Accuracy =  83.84 %\n","After 33 iterations :\n","loss =  0.7945860277124856852\n","Accuracy =  83.82 %\n","After 34 iterations :\n","loss =  0.79195326937005701076\n","Accuracy =  83.82 %\n","After 35 iterations :\n","loss =  0.7893503410307653635\n","Accuracy =  83.82 %\n","After 36 iterations :\n","loss =  0.786776356493467586\n","Accuracy =  83.84 %\n","After 37 iterations :\n","loss =  0.7842304742226942273\n","Accuracy =  83.84 %\n","After 38 iterations :\n","loss =  0.78171189435536618105\n","Accuracy =  83.89999999999999 %\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-26-5ab3d57997d6>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     23\u001b[0m             \u001b[0mdf_m\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"/content/drive/MyDrive/Colab Notebooks/ML Bootcamp data/logistic_m.csv\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     24\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 25\u001b[0;31m \u001b[0msoftmax_reg\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mno_of_iterations\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m10000\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mlearning_rate\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mx_test\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mx_test\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_test\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0my_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-26-5ab3d57997d6>\u001b[0m in \u001b[0;36msoftmax_reg\u001b[0;34m(no_of_iterations, learning_rate, x, y, x_test, y_test)\u001b[0m\n\u001b[1;32m     10\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mno_of_iterations\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 12\u001b[0;31m         \u001b[0my_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mm\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mT\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     13\u001b[0m         \u001b[0my_prob_dist\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msoftmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m         \u001b[0mloss\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_prob_dist\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m   \u001b[0;31m# cross entropy\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/numpy/core/overrides.py\u001b[0m in \u001b[0;36mdot\u001b[0;34m(*args, **kwargs)\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}],"source":["def softmax_reg(no_of_iterations,learning_rate,x, y ,x_test,y_test):\n","    row , col = x.shape\n","    label = df.iloc[:,0].values\n","    b= row\n","    np.random.seed(0)\n","    m = np.random.randn(10,col)\n","    m = pd.read_csv(\"/content/drive/MyDrive/Colab Notebooks/ML Bootcamp data/logistic_m.csv\",index_col = 0)\n","    m = m.to_numpy()\n","    y_pred = np.ones((10,row))\n","    for i in range(no_of_iterations):\n","      \n","        y_pred = np.dot(m,x.T)\n","        y_prob_dist = softmax(y_pred)\n","        loss = -1/b*np.sum(y*np.log(y_prob_dist))   # cross entropy \n","        m = m + learning_rate/b *(np.dot((y-y_prob_dist),x))\n","\n","        if i % 1 == 0:\n","            print(\"After {} iterations :\".format(i))\n","            print(\"loss = \", loss)\n","            score = accuracy(x_test,m,y_test)\n","            print(\"Accuracy = \",score*100,\"%\")\n","            df_m = pd.DataFrame(m)\n","            df_m.to_csv(\"/content/drive/MyDrive/Colab Notebooks/ML Bootcamp data/logistic_m.csv\")\n","\n","softmax_reg(no_of_iterations=10000,learning_rate=1,x=x,y=y,x_test=x_test,y_test = y_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3515,"status":"ok","timestamp":1680010030222,"user":{"displayName":"Alok Raj","userId":"11236244298665653253"},"user_tz":-330},"id":"AZsG-nWs76RJ","outputId":"6805240c-aded-43cf-affb-4b443983e2b9"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[1. 0. 0. ... 0. 0. 0.]\n"," [0. 1. 0. ... 0. 0. 0.]\n"," [0. 0. 1. ... 0. 0. 0.]\n"," ...\n"," [0. 0. 0. ... 0. 1. 0.]\n"," [0. 0. 0. ... 0. 1. 0.]\n"," [0. 0. 1. ... 0. 0. 0.]] \n"," (10000, 10)\n","        Ids  Predicted Label\n","0     25672                0\n","1     59964                1\n","2     66230                2\n","3     50801                6\n","4     83307                1\n","...     ...              ...\n","9995  71009                0\n","9996  67472                6\n","9997  99226                8\n","9998  58519                8\n","9999  80458                2\n","\n","[10000 rows x 2 columns]\n"]}],"source":["m = pd.read_csv(\"/content/drive/MyDrive/Colab Notebooks/ML Bootcamp data/logistic_m.csv\",index_col = 0)\n","m = m.to_numpy()\n","\n","df_test = pd.read_csv(\"/content/drive/MyDrive/Colab Notebooks/ML Bootcamp data/classification_test.csv\")\n","Test_data = df_test.iloc[:,1:].values\n","\n","test_data = (Test_data- np.mean(X,axis =0 ))/255  \n","\n","y_test_pred = m @ test_data.T\n","\n","y_test_prob_dist = softmax(y_test_pred)\n","y_test_res = np.zeros(y_test_prob_dist.shape)\n","\n","itr =0\n","for i in np.argmax(y_test_prob_dist,axis = 0):\n","    y_test_res[i,itr] = 1\n","    itr+=1\n","\n","ids = df_test.iloc[:,0]\n","\n","print((y_test_res).T, \"\\n\" ,(y_test_res).T.shape)\n","\n","res_labels = np.argmax(y_test_prob_dist,axis = 0)\n","res = pd.DataFrame([ids,res_labels]).T\n","res.columns = [\"Ids\", \"Predicted Label\"]\n","print(res)\n","# res.to_csv(\"/content/drive/MyDrive/Colab Notebooks/ML Bootcamp data/Logistic_Regression_Result.csv\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":24344,"status":"ok","timestamp":1678433340817,"user":{"displayName":"Alok Raj","userId":"11236244298665653253"},"user_tz":-330},"id":"v0mUaf-oa9t_","outputId":"7b6fc5c6-32ce-4929-a715-d09382b28707"},"outputs":[{"name":"stdout","output_type":"stream","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]}],"metadata":{"colab":{"provenance":[],"mount_file_id":"1H6mRcTM8ZTP9WLcXe6TbSk-Bl0-eovgB","authorship_tag":"ABX9TyPGnJdiwxg7Mcjii8KIEOuu"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}